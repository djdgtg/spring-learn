<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qinchao.cms.mapper.BaseClassesMapper" >
  <resultMap id="BaseResultMap" type="com.qinchao.cms.entity.BaseClasses" >

    <!-- 分类ID -->
    <id column="ClassID" property="classid" jdbcType="INTEGER" />

    <!-- 父分类 -->
    <result column="ParentClassID" property="parentclassid" jdbcType="INTEGER" />

    <!-- 分类名 -->
    <result column="ClassName" property="classname" jdbcType="VARCHAR" />

    <!-- 分类图片 -->
    <result column="ClassImg" property="classimg" jdbcType="VARCHAR" />

    <!-- 描述 -->
    <result column="ClassDescription" property="classdescription" jdbcType="VARCHAR" />

    <!-- 排序 -->
    <result column="Sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ClassID, ParentClassID, ClassName, ClassImg, ClassDescription, Sort
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qinchao.cms.entity.BaseClassesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_classes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from base_classes
    where ClassID = #{classid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_classes
    where ClassID = #{classid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qinchao.cms.entity.BaseClassesExample" >
    delete from base_classes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" >
    insert into base_classes (ClassID, ParentClassID, ClassName,
      ClassImg, ClassDescription, Sort
      )
    values (#{classid,jdbcType=INTEGER}, #{parentclassid,jdbcType=INTEGER}, #{classname,jdbcType=VARCHAR},
      #{classimg,jdbcType=VARCHAR}, #{classdescription,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" >
    insert into base_classes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classid != null" >
        ClassID,
      </if>
      <if test="parentclassid != null" >
        ParentClassID,
      </if>
      <if test="classname != null" >
        ClassName,
      </if>
      <if test="classimg != null" >
        ClassImg,
      </if>
      <if test="classdescription != null" >
        ClassDescription,
      </if>
      <if test="sort != null" >
        Sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classid != null" >
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="parentclassid != null" >
        #{parentclassid,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="classimg != null" >
        #{classimg,jdbcType=VARCHAR},
      </if>
      <if test="classdescription != null" >
        #{classdescription,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qinchao.cms.entity.BaseClassesExample" resultType="java.lang.Integer" >
    select count(*) from base_classes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_classes
    <set >
      <if test="record.classid != null" >
        ClassID = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.parentclassid != null" >
        ParentClassID = #{record.parentclassid,jdbcType=INTEGER},
      </if>
      <if test="record.classname != null" >
        ClassName = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.classimg != null" >
        ClassImg = #{record.classimg,jdbcType=VARCHAR},
      </if>
      <if test="record.classdescription != null" >
        ClassDescription = #{record.classdescription,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        Sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_classes
    set ClassID = #{record.classid,jdbcType=INTEGER},
      ParentClassID = #{record.parentclassid,jdbcType=INTEGER},
      ClassName = #{record.classname,jdbcType=VARCHAR},
      ClassImg = #{record.classimg,jdbcType=VARCHAR},
      ClassDescription = #{record.classdescription,jdbcType=VARCHAR},
      Sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" >
    update base_classes
    <set >
      <if test="parentclassid != null" >
        ParentClassID = #{parentclassid,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        ClassName = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="classimg != null" >
        ClassImg = #{classimg,jdbcType=VARCHAR},
      </if>
      <if test="classdescription != null" >
        ClassDescription = #{classdescription,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        Sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where ClassID = #{classid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" >
    update base_classes
    set ParentClassID = #{parentclassid,jdbcType=INTEGER},
      ClassName = #{classname,jdbcType=VARCHAR},
      ClassImg = #{classimg,jdbcType=VARCHAR},
      ClassDescription = #{classdescription,jdbcType=VARCHAR},
      Sort = #{sort,jdbcType=INTEGER}
    where ClassID = #{classid,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.qinchao.cms.entity.BaseClassesExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_classes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2019-01-18 14:45:07 ### -->



  <!-- Your codes goes here!!! -->

</mapper>
